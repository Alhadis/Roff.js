#!/usr/bin/env node
process.stdout.write(`
.de PS
.br
.sp .3v
.ne 0\\\\$1+1v+\\n(.Vu
.in \\\\n(.lu-\\\\n(.iu-0\\\\$2/2u>?0
..
.de PE
.in
.sp .3v+.5m
..
.PS
pi = 3.141592654
deg = 57.29578
define atom { [
T: $1 wid $2 ht $3-2*$7
C: ellipse invis ht $5 wid $6 at T.w + ($4,$7)
L: ellipse invis ht $5 wid $6 at T.w + (cwid/2,$7)
R: ellipse invis ht $5 wid $6 at T.e + (-cwid/2,$7)
] }
define bond {
line $3 by ($1) * sin(($2)/deg), ($1) * cos(($2)/deg)
}
define doublebond {
line $3 invis by ($1) * sin(($2)/deg), ($1) * cos(($2)/deg)
V1: last line.start; V2: last line.end; dx = V2.x-V1.x; dy = V2.y-V1.y
norm = sqrt(dx*dx + dy*dy)
ny = dx * .02 / norm
nx = -dy * .02 / norm
line from V1 + (nx,ny) to V2 + (nx,ny)
line from V1 - (nx,ny) to V2 - (nx,ny)
move to V2
}
define triplebond {
line $3 invis by ($1) * sin(($2)/deg), ($1) * cos(($2)/deg)
V1: last line.start; V2: last line.end; dx = V2.x-V1.x; dy = V2.y-V1.y
norm = sqrt(dx*dx + dy*dy)
ny = dx * .025 / norm
nx = -dy * .025 / norm
line from V1 + (nx,ny) to V2 + (nx,ny)
line from V1 - (nx,ny) to V2 - (nx,ny)
line from V1 to V2
move to V2
}
define backbond {
line $3 invis by ($1) * sin(($2)/deg), ($1) * cos(($2)/deg)
V1: last line.start; V2: last line.end; dx = V2.x-V1.x; dy = V2.y-V1.y
norm = sqrt(dx*dx + dy*dy)
n = norm / .025
ny = dx * .02 / norm
nx = -dy * .02 / norm
for i = 1 to n-1 do {
XZ: i/n <V1,V2>
line from XZ + (nx,ny) to XZ - (nx,ny)
}
move to V2
}
define frontbond {
line $3 invis by ($1) * sin(($2)/deg), ($1) * cos(($2)/deg)
V1: last line.start; V2: last line.end; dx = V2.x-V1.x; dy = V2.y-V1.y
ah = arrowht; aw = arrowwid; ahead = arrowhead
arrowht = sqrt(dx*dx + dy*dy)
arrowwid = 0.05
arrowhead = 7
line <- from V1 to V2
arrowht = ah; arrowwid = aw; arrowhead = ahead
}
textht = 0.16; textwid = .1; cwid = 0.12
lineht = 0.2; linewid = 0.2
Last: 0,0
Last: CH1: atom("CH\\s-3\\d1\\u\\s+3", 0.6, 0.32, 0.12, 0.32, 0.24, 0.03) with .L.w at Last.e
Last: bond(0.4, 90, from Last.R.e )
Last: CH2: atom("CH\\s-3\\d2\\u\\s+3", 0.6, 0.32, 0.12, 0.32, 0.24, 0.03) with .L.w at Last.end
.PE
`.trim() + "\n");
