#!/usr/bin/env node --es_staging
"use strict";

/*
A = 0.707107, 0.707107, 0.424501, 1.83871, 0, 0
B = 6.12323e-17, 1, -1, 6.12323e-17, 0, 0

AB = -0.707107, 0.707107, -1.83871, 0.424501, 0, 0
?

AB =	a b c   α β γ    │ aα + bλ + cρ      aβ + bμ + cσ    aγ + bν + cτ
		p q r   λ μ ν    │ pα + qλ + rρ      pβ + qμ + rσ    pγ + qν + rτ
		u v w   ρ σ τ    │ uα + vλ + wρ      uβ + vμ + wσ    uγ + vν + wτ

		a b 0   0 1 2
		c d 0   3 4 5
		e f 1   6 7 8
*/

function concatFull(A, B){
	const [
		a, b, c,
		p, q, r,
		u, v, w,
	] = A;
	const [
		α, β, γ,
		λ, μ, ν,
		ρ, σ, τ,
	] = B;
	return [
		(a * α) + (b * λ) + (c * ρ),   (a * β) + (b * μ) + (c * σ),   (a * γ) + (b * ν) + (c * τ),
		(p * α) + (q * λ) + (r * ρ),   (p * β) + (q * μ) + (r * σ),   (p * γ) + (q * ν) + (r * τ),
		(u * α) + (v * λ) + (w * ρ),   (u * β) + (v * μ) + (w * σ),   (u * γ) + (v * ν) + (w * τ),
	];
}

let A = [
	0.707107, 0.707107, 0,
	0.424501, 1.83871,  0,
	0, 0, 1
];
let B = [
	6.12323e-17,  1,  0,
	-1, 6.12323e-17,  0,
	0, 0, 1
];
let AB = concatFull(A, B);
console.log(AB);



function concat(A, B){
	return [
		(A[0] * B[0]) + (A[1] * B[2]),        (A[0] * B[1]) + (A[1] * B[3]),
		(A[2] * B[0]) + (A[3] * B[2]),        (A[2] * B[1]) + (A[3] * B[3]),
		(A[4] * B[0]) + (A[5] * B[2]) + B[4], (A[4] * B[1]) + (A[5] * B[3]) + B[5],
	];
}


A = [
	0.707107, 0.707107,
	0.424501, 1.83871,
	0, 0,
];
B = [
	6.12323e-17,  1,
	-1, 6.12323e-17,
	0, 0,
];
B = [1, 0, 0, 1, 0, 0];
AB = concat(A, B);
console.log(AB);


function concatRotate(θ, B){
	θ = -(θ * Math.PI / 180);
	const A = [
		Math.cos(θ),
		Math.sin(θ),
		-Math.sin(θ),
		Math.cos(θ),
		0,
		0,
	];
	return [
		(A[0] * B[0]) + (A[1] * B[2]),        (A[0] * B[1]) + (A[1] * B[3]),
		(A[2] * B[0]) + (A[3] * B[2]),        (A[2] * B[1]) + (A[3] * B[3]),
		(A[4] * B[0]) + (A[5] * B[2]) + B[4], (A[4] * B[1]) + (A[5] * B[3]) + B[5],
	];
}
AB = concatRotate(45, [1, 0, 0, 1, 0, 0]);
console.log(AB);
